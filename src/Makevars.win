# src/Makevars.win
# For R (UCRT versions) and Rtools (UCRT64 environment)

# MINGW_PREFIX is provided by R's Makeconf and points to the UCRT64 root
# e.g., c:/rtools45/ucrt64 (or /ucrt64 in MSYS shell)
GRPC_UCRT_INCLUDE_DIR = $(MINGW_PREFIX)/include

# CXXFLAGS:
# R's Makeconf automatically adds $(LOCAL_SOFT)/include (e.g. c:/rtools45/ucrt64/include).
# We can add $(MINGW_PREFIX)/include explicitly if it might differ or for clarity,
# or rely on LOCAL_CPPFLAGS from Makeconf.
# pkg-config --cflags grpc++ on UCRT64 often just gives -pthread -DNOMINMAX.
# The essential include path is covered by R's Makeconf (LOCAL_CPPFLAGS).
# Use VERIFIED_GRPC_C_INCLUDE_DIR if set by CI (can be empty for local builds).
GRPC_CI_INCLUDE_FLAG = $(if $(VERIFIED_GRPC_C_INCLUDE_DIR),-I$(VERIFIED_GRPC_C_INCLUDE_DIR))
# PKG_CXXFLAGS_FROM_PKG_CONFIG = $(shell pkg-config --cflags grpc++) # Usually -pthread -DNOMINMAX

PKG_CXXFLAGS = $(GRPC_CI_INCLUDE_FLAG) $(shell pkg-config --cflags grpc++) # Add -I"$(GRPC_UCRT_INCLUDE_DIR)" if relying purely on this Makevars.win and not Makeconf's LOCAL_CPPFLAGS

# LIBS: Use pkg-config to get the library flags dynamically. This is robust.
PKG_LIBS = $(shell pkg-config --libs grpc++)

# C++ Standard
CXX_STD = CXX17


# src/Makevars.win
# For R (UCRT versions, e.g., R 4.2.0+ ucrt) and Rtools (UCRT64 environment)
#
# Ensure the following packages are installed in your Rtools UCRT64 MSYS2 shell:
# pacman -S mingw-w64-ucrt-x86_64-grpc mingw-w64-ucrt-x86_64-pkgconf
#
# The CXXFLAGS and LIBS below are based on the output of:
#   pkg-config --cflags grpc++
#   pkg-config --libs grpc++
# run from the MSYS2 UCRT64 shell.

# $(MINGW_PREFIX) is provided by R's build system. For a UCRT R version,
# it should point to the Rtools UCRT64 directory (e.g., C:/rtools45/ucrt64).
#GRPC_UCRT_INCLUDE_DIR = $(MINGW_PREFIX)/include
#GRPC_UCRT_LIB_DIR = $(MINGW_PREFIX)/lib

# Flags from UCRT64 shell: pkg-config --cflags grpc++
# (plus the explicit include path for robustness)
#PKG_CXXFLAGS = -I"$(GRPC_UCRT_INCLUDE_DIR)" -pthread -DNOMINMAX

# Flags from UCRT64 shell: pkg-config --libs grpc++
# (plus the explicit library path and direct major dependencies for robustness)
#PKG_LIBS = -L"$(GRPC_UCRT_LIB_DIR)" \
    -lgrpc++ -lgrpc -labsl_statusor -lgpr -labsl_log_internal_check_op -labsl_flags_internal -labsl_flags_reflection \
    -labsl_flags_private_handle_accessor -labsl_flags_commandlineflag -labsl_flags_commandlineflag_internal \
    -labsl_flags_config -labsl_flags_program_name -labsl_raw_hash_set -labsl_hashtablez_sampler \
    -labsl_flags_marshalling -labsl_log_internal_conditions -labsl_log_internal_message -labsl_examine_stack \
    -labsl_log_internal_format -labsl_log_internal_nullguard -labsl_log_internal_structured_proto \
    -labsl_log_internal_proto -labsl_log_internal_log_sink_set -labsl_log_internal_globals -labsl_log_sink \
    -labsl_log_entry -labsl_log_globals -labsl_hash -labsl_city -labsl_bad_variant_access \
    -labsl_low_level_hash -labsl_vlog_config_internal -labsl_log_internal_fnmatch -labsl_random_distributions \
    -labsl_random_seed_sequences -labsl_random_internal_pool_urbg -labsl_random_internal_randen \
    -labsl_random_internal_randen_hwaes -labsl_random_internal_randen_hwaes_impl \
    -labsl_random_internal_randen_slow -labsl_random_internal_platform \
    -labsl_random_internal_seed_material -lbcrypt -labsl_random_seed_gen_exception -labsl_status \
    -labsl_cord -labsl_cordz_info -labsl_cord_internal -labsl_cordz_functions -labsl_exponential_biased \
    -labsl_cordz_handle -labsl_crc_cord_state -labsl_crc32c -labsl_crc_internal -labsl_crc_cpu_detect \
    -labsl_leak_check -labsl_bad_optional_access -labsl_strerror -labsl_str_format_internal \
    -labsl_synchronization -labsl_graphcycles_internal -labsl_kernel_timeout_internal -labsl_stacktrace \
    -labsl_symbolize -ldbghelp -labsl_debugging_internal -labsl_demangle_internal -labsl_demangle_rust \
    -labsl_decode_rust_punycode -labsl_utf8_for_code_point -labsl_malloc_internal \
    -labsl_tracing_internal -labsl_time -labsl_civil_time -labsl_strings -labsl_strings_internal \
    -labsl_string_view -labsl_base -ladvapi32 -labsl_spinlock_wait -labsl_int128 -labsl_throw_delegate \
    -labsl_raw_logging_internal -labsl_log_severity -labsl_time_zone \
    -lprotobuf -lre2 -lcares -lssl -lcrypto -lz \
    -lws2_32 -lmswsock

# Require C++17 for modern gRPC/Abseil compatibility
#CXX_STD = CXX17
